/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'age';
SET search_path TO ag_catalog;
SELECT create_graph('cypher_remove');
NOTICE:  graph "cypher_remove" has been created
 create_graph 
--------------
 
(1 row)

--test 1
SELECT * FROM cypher('cypher_remove', $$CREATE (:test_1)$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE (:test_1 {i: 0, j: 5, a: 0})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE (:test_1 {i: 1})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n:test_1) REMOVE n.i $$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n:test_1) RETURN n$$) AS (a agtype);
                                  a                                   
----------------------------------------------------------------------
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
(3 rows)

--test 2
SELECT * FROM cypher('cypher_remove', $$CREATE (:test_2)$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE (:test_2 {i: 0, j: 5, a: 0})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE (:test_2 {i: 1})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n:test_2) REMOVE n.j RETURN n$$) AS (a agtype);
                                  a                                   
----------------------------------------------------------------------
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0, "i": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {"i": 1}}::vertex
(3 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n:test_2) RETURN n$$) AS (a agtype);
                                  a                                   
----------------------------------------------------------------------
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0, "i": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {"i": 1}}::vertex
(3 rows)

--test 3 Validate Paths are updated
SELECT * FROM cypher('cypher_remove', $$CREATE (:test_3 { i : 20 } )-[:test_3_edge {j:20}]->(:test_3 {i:10})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH p=(n)-[:test_3_edge]->() REMOVE n.i RETURN p$$) AS (a agtype);
                                                                                                                                                               a                                                                                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 [{"id": 7, "label": "test_3", "properties": {}}::vertex, {"id": 1, "label": "test_3_edge", "end_id": 8, "start_id": 7, "properties": {"j": 20}, "end_label_id": 5, "end_label_name": "test_3", "start_label_id": 5, "start_label_name": "test_3"}::edge, {"id": 8, "label": "test_3", "properties": {"i": 10}}::vertex]::path
(1 row)

--test 4 Edges
SELECT * FROM cypher('cypher_remove', $$CREATE (:test_4 { i : 20 } )-[:test_4_edge {j:20}]->(:test_4 {i:10})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH ()-[n]->(:test_4) REMOVE n.i RETURN n$$) AS (a agtype);
                                                                                                a                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2, "label": "test_4_edge", "end_id": 10, "start_id": 9, "properties": {"j": 20}, "end_label_id": 7, "end_label_name": "test_4", "start_label_id": 7, "start_label_name": "test_4"}::edge
(1 row)

SELECT * FROM cypher('cypher_remove', $$MATCH ()-[n]->(:test_4) RETURN n$$) AS (a agtype);
                                                                                                a                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2, "label": "test_4_edge", "end_id": 10, "start_id": 9, "properties": {"j": 20}, "end_label_id": 7, "end_label_name": "test_4", "start_label_id": 7, "start_label_name": "test_4"}::edge
(1 row)

--test 5 two REMOVE clauses
SELECT * FROM cypher('cypher_remove', $$CREATE (:test_5 {i: 1, j : 2, k : 3}) $$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$
        MATCH (n:test_5)
        REMOVE n.i
        REMOVE n.j
        RETURN n
$$) AS (a agtype);
                               a                               
---------------------------------------------------------------
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
(1 row)

SELECT * FROM cypher('cypher_remove', $$
        MATCH (n:test_5)
        RETURN n
$$) AS (a agtype);
                               a                               
---------------------------------------------------------------
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
(1 row)

--test 6 Create a loop and see that set can work after create
SELECT * FROM cypher('cypher_remove', $$CREATE (:test_6 {j: 5, y: 99})$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$
	MATCH (n {j: 5})
	CREATE p=(n)-[e:e {j:34}]->(n)
	REMOVE n.y
	RETURN n, p
$$) AS (a agtype, b agtype);
                                  a                                   |                                                                                                                                                                    b                                                                                                                                                                     
----------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex | [{"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex, {"id": 3, "label": "e", "end_id": 2, "start_id": 2, "properties": {"j": 34}, "end_label_id": 3, "end_label_name": "test_1", "start_label_id": 3, "start_label_name": "test_1"}::edge, {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex]::path
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex        | [{"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex, {"id": 4, "label": "e", "end_id": 12, "start_id": 12, "properties": {"j": 34}, "end_label_id": 10, "end_label_name": "test_6", "start_label_id": 10, "start_label_name": "test_6"}::edge, {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex]::path
(2 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n:test_6) RETURN n$$) AS (a agtype);
                               a                               
---------------------------------------------------------------
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
(1 row)

--test 7 Create a loop and see that set can work after create
SELECT * FROM cypher('cypher_remove', $$
	CREATE (:test_7)-[e:e {j:34}]->()
	REMOVE e.y
	RETURN e
$$) AS (a agtype);
                                                                                         a                                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 5, "label": "e", "end_id": 14, "start_id": 13, "properties": {"j": 34}, "end_label_id": 1, "end_label_name": "", "start_label_id": 12, "start_label_name": "test_7"}::edge
(1 row)

SELECT * FROM cypher('cypher_remove', $$MATCH (n:test_7) RETURN n$$) AS (a agtype);
                            a                            
---------------------------------------------------------
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(1 row)

--test 8
SELECT * FROM cypher('cypher_remove', $$
        MATCH (n:test_7)
        MATCH (n)-[e:e {j:34}]->()
        REMOVE n.y
        RETURN n
$$) AS (a agtype);
                            a                            
---------------------------------------------------------
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(1 row)

--Handle Inheritance
SELECT * FROM cypher('cypher_remove', $$CREATE ( {i : 1 })$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE n.i RETURN n$$) AS (a agtype);
                                  a                                   
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(15 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n) RETURN n$$) AS (a agtype);
                                  a                                   
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(15 rows)

-- prepared statements
SELECT * FROM cypher('cypher_remove', $$CREATE ( {i : 1 })$$) AS (a agtype);
 a 
---
(0 rows)

PREPARE p_1 AS SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE n.i RETURN n $$) AS (a agtype);
EXECUTE p_1;
                                  a                                   
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(16 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE ( {i : 1 })$$) AS (a agtype);
 a 
---
(0 rows)

EXECUTE p_1;
                                  a                                   
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 17, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(17 rows)

-- pl/pgsql
SELECT * FROM cypher('cypher_remove', $$CREATE ( {i : 1 })$$) AS (a agtype);
 a 
---
(0 rows)

CREATE FUNCTION remove_test()
RETURNS TABLE(vertex agtype)
LANGUAGE plpgsql
VOLATILE
AS $BODY$
BEGIN
	RETURN QUERY SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE n.i RETURN n$$) AS (a agtype);
END
$BODY$;
SELECT remove_test();
                             remove_test                              
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 17, "label": "", "properties": {}}::vertex
 {"id": 18, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(18 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE ( {i : 1 })$$) AS (a agtype);
 a 
---
(0 rows)

SELECT remove_test();
                             remove_test                              
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 17, "label": "", "properties": {}}::vertex
 {"id": 18, "label": "", "properties": {}}::vertex
 {"id": 19, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(19 rows)

--
-- Updating Multiple Fields
--
SELECT * FROM cypher('cypher_remove', $$MATCH (n) RETURN n$$) AS (a agtype);
                                  a                                   
----------------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 17, "label": "", "properties": {}}::vertex
 {"id": 18, "label": "", "properties": {}}::vertex
 {"id": 19, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0, "j": 5}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {"k": 3}}::vertex
 {"id": 12, "label": "test_6", "properties": {"j": 5}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(19 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE n.i, n.j, n.k RETURN n$$) AS (a agtype);
                              a                               
--------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 17, "label": "", "properties": {}}::vertex
 {"id": 18, "label": "", "properties": {}}::vertex
 {"id": 19, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {}}::vertex
 {"id": 12, "label": "test_6", "properties": {}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(19 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH (n) RETURN n$$) AS (a agtype);
                              a                               
--------------------------------------------------------------
 {"id": 14, "label": "", "properties": {}}::vertex
 {"id": 15, "label": "", "properties": {}}::vertex
 {"id": 16, "label": "", "properties": {}}::vertex
 {"id": 17, "label": "", "properties": {}}::vertex
 {"id": 18, "label": "", "properties": {}}::vertex
 {"id": 19, "label": "", "properties": {}}::vertex
 {"id": 1, "label": "test_1", "properties": {}}::vertex
 {"id": 3, "label": "test_1", "properties": {}}::vertex
 {"id": 2, "label": "test_1", "properties": {"a": 0}}::vertex
 {"id": 4, "label": "test_2", "properties": {}}::vertex
 {"id": 5, "label": "test_2", "properties": {"a": 0}}::vertex
 {"id": 6, "label": "test_2", "properties": {}}::vertex
 {"id": 8, "label": "test_3", "properties": {}}::vertex
 {"id": 7, "label": "test_3", "properties": {}}::vertex
 {"id": 9, "label": "test_4", "properties": {}}::vertex
 {"id": 10, "label": "test_4", "properties": {}}::vertex
 {"id": 11, "label": "test_5", "properties": {}}::vertex
 {"id": 12, "label": "test_6", "properties": {}}::vertex
 {"id": 13, "label": "test_7", "properties": {}}::vertex
(19 rows)

SELECT * FROM cypher('cypher_remove', $$CREATE ()-[:edge_multi_property { i: 5, j: 20}]->()$$) AS (a agtype);
 a 
---
(0 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH ()-[e:edge_multi_property]-() RETURN e$$) AS (a agtype);
                                                                                                  a                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 6, "label": "edge_multi_property", "end_id": 21, "start_id": 20, "properties": {"i": 5, "j": 20}, "end_label_id": 1, "end_label_name": "", "start_label_id": 1, "start_label_name": ""}::edge
 {"id": 6, "label": "edge_multi_property", "end_id": 21, "start_id": 20, "properties": {"i": 5, "j": 20}, "end_label_id": 1, "end_label_name": "", "start_label_id": 1, "start_label_name": ""}::edge
(2 rows)

SELECT * FROM cypher('cypher_remove', $$MATCH ()-[e:edge_multi_property]-() REMOVE e.i, e.j RETURN e$$) AS (a agtype);
                                                                                           a                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 6, "label": "edge_multi_property", "end_id": 21, "start_id": 20, "properties": {}, "end_label_id": 1, "end_label_name": "", "start_label_id": 1, "start_label_name": ""}::edge
 {"id": 6, "label": "edge_multi_property", "end_id": 21, "start_id": 20, "properties": {}, "end_label_id": 1, "end_label_name": "", "start_label_id": 1, "start_label_name": ""}::edge
(2 rows)

--Errors
SELECT * FROM cypher('cypher_remove', $$REMOVE n.i$$) AS (a agtype);
ERROR:  REMOVE cannot be the first clause in a Cypher query
LINE 1: SELECT * FROM cypher('cypher_remove', $$REMOVE n.i$$) AS (a ...
                                                ^
SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE n.i = NULL$$) AS (a agtype);
ERROR:  REMOVE clause must be in the format: REMOVE variable.property_name
LINE 1: SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE n.i...
                                                ^
SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE wrong_var.i$$) AS (a agtype);
ERROR:  undefined reference to variable wrong_var in REMOVE clause
LINE 1: SELECT * FROM cypher('cypher_remove', $$MATCH (n) REMOVE wro...
                                                ^
--
-- Clean up
--
DROP FUNCTION remove_test;
SELECT drop_graph('cypher_remove', true);
NOTICE:  drop cascades to 15 other objects
DETAIL:  drop cascades to sequence cypher_remove.vertex_id_seq
drop cascades to table cypher_remove._ag_label_vertex
drop cascades to sequence cypher_remove.edge_id_seq
drop cascades to table cypher_remove._ag_label_edge
drop cascades to table cypher_remove.test_1
drop cascades to table cypher_remove.test_2
drop cascades to table cypher_remove.test_3
drop cascades to table cypher_remove.test_3_edge
drop cascades to table cypher_remove.test_4
drop cascades to table cypher_remove.test_4_edge
drop cascades to table cypher_remove.test_5
drop cascades to table cypher_remove.test_6
drop cascades to table cypher_remove.e
drop cascades to table cypher_remove.test_7
drop cascades to table cypher_remove.edge_multi_property
NOTICE:  graph "cypher_remove" has been dropped
 drop_graph 
------------
 
(1 row)

--
-- End
--
