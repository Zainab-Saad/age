/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
\! cp -r regress/age_load/data regress/instance/data/age_load
LOAD 'age';
SET search_path TO ag_catalog;
SELECT create_graph('agload_test_graph');
NOTICE:  graph "agload_test_graph" has been created
 create_graph 
--------------
 
(1 row)

SELECT create_vlabel('agload_test_graph','Country');
NOTICE:  VLabel "Country" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT load_labels_from_file('agload_test_graph', 'Country',
    'age_load/countries.csv');
 load_labels_from_file 
-----------------------
 
(1 row)

SELECT create_vlabel('agload_test_graph','City');
NOTICE:  VLabel "City" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT load_labels_from_file('agload_test_graph', 'City',
    'age_load/cities.csv');
 load_labels_from_file 
-----------------------
 
(1 row)

SELECT create_elabel('agload_test_graph','has_city');
NOTICE:  ELabel "has_city" has been created
 create_elabel 
---------------
 
(1 row)

SELECT load_edges_from_file('agload_test_graph', 'has_city',
     'age_load/edges.csv');
 load_edges_from_file 
----------------------
 
(1 row)

SELECT table_catalog, table_schema, lower(table_name) as table_name, table_type
FROM information_schema.tables
WHERE table_schema = 'agload_test_graph' ORDER BY table_name ASC;
   table_catalog    |   table_schema    |    table_name    | table_type 
--------------------+-------------------+------------------+------------
 contrib_regression | agload_test_graph | _ag_label_edge   | BASE TABLE
 contrib_regression | agload_test_graph | _ag_label_vertex | BASE TABLE
 contrib_regression | agload_test_graph | city             | BASE TABLE
 contrib_regression | agload_test_graph | country          | BASE TABLE
 contrib_regression | agload_test_graph | has_city         | BASE TABLE
(5 rows)

SELECT COUNT(*) FROM agload_test_graph."Country";
 count 
-------
    53
(1 row)

SELECT COUNT(*) FROM agload_test_graph."City";
 count 
-------
 72485
(1 row)

SELECT COUNT(*) FROM agload_test_graph."has_city";
 count 
-------
 72485
(1 row)

SELECT COUNT(*) FROM cypher('agload_test_graph', $$MATCH(n) RETURN n$$) as (n agtype);
 count 
-------
 72538
(1 row)

SELECT COUNT(*) FROM cypher('agload_test_graph', $$MATCH (a)-[e]->(b) RETURN e$$) as (n agtype);
 count 
-------
 72485
(1 row)

SELECT create_vlabel('agload_test_graph','Country2');
NOTICE:  VLabel "Country2" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT load_labels_from_file('agload_test_graph', 'Country2',
                             'age_load/countries.csv', false);
 load_labels_from_file 
-----------------------
 
(1 row)

SELECT create_vlabel('agload_test_graph','City2');
NOTICE:  VLabel "City2" has been created
 create_vlabel 
---------------
 
(1 row)

SELECT load_labels_from_file('agload_test_graph', 'City2',
                             'age_load/cities.csv', false);
 load_labels_from_file 
-----------------------
 
(1 row)

SELECT COUNT(*) FROM agload_test_graph."Country2";
 count 
-------
    53
(1 row)

SELECT COUNT(*) FROM agload_test_graph."City2";
 count 
-------
 72485
(1 row)

SELECT id, label_id FROM agload_test_graph."Country" LIMIT 10;
 id | label_id 
----+----------
  1 |        3
  2 |        3
  3 |        3
  4 |        3
  5 |        3
  6 |        3
  7 |        3
  8 |        3
  9 |        3
 10 |        3
(10 rows)

SELECT id, label_id FROM agload_test_graph."Country2" LIMIT 10;
  id   | label_id 
-------+----------
 72539 |        6
 72540 |        6
 72541 |        6
 72542 |        6
 72543 |        6
 72544 |        6
 72545 |        6
 72546 |        6
 72547 |        6
 72548 |        6
(10 rows)

SELECT * FROM agload_test_graph."has_city" LIMIT 10;
 id | start_id | end_id | properties | label_id | start_label_id | end_label_id 
----+----------+--------+------------+----------+----------------+--------------
  1 |       54 |      2 | {}         |        5 |              4 |            3
  2 |       55 |      2 | {}         |        5 |              4 |            3
  3 |       56 |      2 | {}         |        5 |              4 |            3
  4 |       57 |      2 | {}         |        5 |              4 |            3
  5 |       58 |      2 | {}         |        5 |              4 |            3
  6 |       59 |      2 | {}         |        5 |              4 |            3
  7 |       60 |      2 | {}         |        5 |              4 |            3
  8 |       61 |      2 | {}         |        5 |              4 |            3
  9 |       62 |      2 | {}         |        5 |              4 |            3
 10 |       63 |      2 | {}         |        5 |              4 |            3
(10 rows)

SELECT * FROM cypher('agload_test_graph', $$ MATCH (n)-[e]->(m)
    RETURN e LIMIT 10 $$) AS (result agtype);
                                                                                        result                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 1, "label": "has_city", "end_id": 2, "start_id": 54, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 2, "label": "has_city", "end_id": 2, "start_id": 55, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 3, "label": "has_city", "end_id": 2, "start_id": 56, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 4, "label": "has_city", "end_id": 2, "start_id": 57, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 5, "label": "has_city", "end_id": 2, "start_id": 58, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 6, "label": "has_city", "end_id": 2, "start_id": 59, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 7, "label": "has_city", "end_id": 2, "start_id": 60, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 8, "label": "has_city", "end_id": 2, "start_id": 61, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 9, "label": "has_city", "end_id": 2, "start_id": 62, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
 {"id": 10, "label": "has_city", "end_id": 2, "start_id": 63, "properties": {}, "end_label_id": 3, "end_label_name": "Country", "start_label_id": 4, "start_label_name": "City"}::edge
(10 rows)

SELECT * FROM cypher('agload_test_graph', $$MATCH(n:Country {iso2 : 'BE'})
    RETURN id(n), n.name, n.iso2 $$) as ("id(n)" agtype, "n.name" agtype, "n.iso2" agtype);
 id(n) |  n.name   | n.iso2 
-------+-----------+--------
 6     | "Belgium" | "BE"
(1 row)

SELECT * FROM cypher('agload_test_graph', $$MATCH(n:Country2 {iso2 : 'BE'})
    RETURN id(n), n.name, n.iso2 $$) as ("id(n)" agtype, "n.name" agtype, "n.iso2" agtype);
 id(n) |  n.name   | n.iso2 
-------+-----------+--------
 72544 | "Belgium" | "BE"
(1 row)

SELECT * FROM cypher('agload_test_graph', $$MATCH(n:Country {iso2 : 'AT'})
    RETURN id(n), n.name, n.iso2 $$) as ("id(n)" agtype, "n.name" agtype, "n.iso2" agtype);
 id(n) |  n.name   | n.iso2 
-------+-----------+--------
 4     | "Austria" | "AT"
(1 row)

SELECT * FROM cypher('agload_test_graph', $$MATCH(n:Country2 {iso2 : 'AT'})
    RETURN id(n), n.name, n.iso2 $$) as ("id(n)" agtype, "n.name" agtype, "n.iso2" agtype);
 id(n) |  n.name   | n.iso2 
-------+-----------+--------
 72542 | "Austria" | "AT"
(1 row)

SELECT * FROM cypher('agload_test_graph', $$
    MATCH (u:Country {region : "Europe"})
    WHERE u.name =~ 'Cro.*'
    RETURN u.name, u.region
$$) AS (result_1 agtype, result_2 agtype);
 result_1  | result_2 
-----------+----------
 "Croatia" | "Europe"
(1 row)

SELECT drop_graph('agload_test_graph', true);
NOTICE:  drop cascades to 9 other objects
DETAIL:  drop cascades to sequence agload_test_graph.vertex_id_seq
drop cascades to table agload_test_graph._ag_label_vertex
drop cascades to sequence agload_test_graph.edge_id_seq
drop cascades to table agload_test_graph._ag_label_edge
drop cascades to table agload_test_graph."Country"
drop cascades to table agload_test_graph."City"
drop cascades to table agload_test_graph.has_city
drop cascades to table agload_test_graph."Country2"
drop cascades to table agload_test_graph."City2"
NOTICE:  graph "agload_test_graph" has been dropped
 drop_graph 
------------
 
(1 row)

